import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
mydataset = pd.read_csv('ratings.csv')
#mydataset1 = mydataset.loc[:,~mydataset.columns.str.contains('^Unnamed')]
X = mydataset.iloc[:,:-1].values
Y = mydataset.iloc[:,:-1].values

from sklearn.model_selection import train_test_split
X_train,X_test,Y_train,Y_test = train_test_split(X,Y,test_size=0.5)

from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(X_train,Y_train)

Y_pred = regressor.predict(X_test)
plt.scatter(X_train,Y_train,color = 'red')
plt.plot(X_train,regressor.predict(X_train),color = 'blue')
plt.title('(Training Set)')
plt.Xlable('movieID')
plt.Ylable('rating')
plt.show()

plt.scatter(X_train,Y_train,color = 'red')
plt.plot(X_train,regressor.predict(X_train),color = 'blue')
plt.title('(Test Set)')
plt.Xlable('movieID')
plt.Ylable('rating')
plt.show()





#y_train = diabetes.target[:-20]
#y_train = regressor.iloc[:-20]
#y_test = ratings.target[-20:]

# Create linear regression object
regr = linear_model.LinearRegression()

# Train the model using the training sets
regr.fit(X_train, Y_train)

# Make predictions using the testing set
Y_pred = regr.predict(X_test)

# The coefficients
print('Coefficients: \n', regr.coef_)
# The mean squared error
print("Mean squared error: %.2f"
      % mean_squared_error(Y_test, Y_pred))
